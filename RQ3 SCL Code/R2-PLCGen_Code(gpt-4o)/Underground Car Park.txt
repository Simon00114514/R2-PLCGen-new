PROGRAM UndergroundParkingControl2
VAR_INPUT
    X1 : BOOL; // Photoelectric switch at ground floor entrance/exit
    X2 : BOOL; // Photoelectric switch at basement entrance/exit
END_VAR

VAR_OUTPUT
    Y1 : BOOL; // Red light at entrance/exit
    Y2 : BOOL; // Green light at entrance/exit
END_VAR

VAR
    M1 : BOOL; // Memory bit for X1 trigger
    M2 : BOOL; // Memory bit for X2 trigger
    M20 : BOOL; // Intermediate variable for ground floor entry process
    M30 : BOOL; // Intermediate variable for basement entry process
END_VAR

(* Initialization code *)
IF NOT M1 AND NOT M2 THEN
    Y1 := FALSE; // Red light off
    Y2 := TRUE;  // Green light on
END_IF;

(* Main control logic *)
IF X1 AND NOT M20 THEN
    // Car enters from ground floor
    M1 := TRUE; // Set memory bit for one scan cycle
    M20 := TRUE; // Activate intermediate variable
    Y1 := TRUE; // Turn on red lights
    Y2 := FALSE; // Turn off green lights
ELSIF X2 AND M20 THEN
    // Car enters basement from ground floor
    M2 := TRUE; // Set memory bit for one scan cycle
    M20 := FALSE; // Deactivate intermediate variable
    Y1 := FALSE; // Turn off red lights
    Y2 := TRUE; // Turn on green lights
ELSIF X2 AND NOT M30 THEN
    // Car exits basement
    M2 := TRUE; // Set memory bit for one scan cycle
    M30 := TRUE; // Activate intermediate variable
    Y1 := TRUE; // Turn on red lights
    Y2 := FALSE; // Turn off green lights
ELSIF X1 AND M30 THEN
    // Car reaches ground floor from basement
    M1 := TRUE; // Set memory bit for one scan cycle
    M30 := FALSE; // Deactivate intermediate variable
    Y1 := FALSE; // Turn off red lights
    Y2 := TRUE; // Turn on green lights
END_IF;

(* Reset memory bits *)
M1 := FALSE;
M2 := FALSE;

END_PROGRAM