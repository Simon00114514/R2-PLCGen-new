Complete Use Case Design:

1. **Use Case Name: System Initialization**
   - **Actor:** PLC / System Controller
   - **Use Case:** [UC-Init]: The system initializes by configuring traffic lights and sensors, setting the default state to allow vehicle passage.
   - **System Boundary:** IEC 61131-3 Structured Text Program for the Parking Passage Control System
   - **Relationships Among Actors:** The PLC communicates directly with sensor interfaces and controls the output signals to the traffic lights.
   - **Detailed Descriptive Information:**
     - **Brief Description:** Set system to initial operating state with green lights activated and red lights deactivated.
     - **Preconditions:** System power is available; sensors and outputs are connected and functioning.
     - **Event Flow (Basic Flow):** 
       1. The PLC program starts.
       2. The system verifies connections to sensors and output devices.
       3. The system initializes traffic lights: green (Y2 on) and red (Y1 off).
       4. The system enters idle mode, waiting for any sensor event.
     - **Alternative Flow:** If one or more sensor/outputs fail the connection test, the system logs an error and starts a fault recovery routine, maintaining a safe state (red lights on) until resolved.
     - **Postconditions:** The system is in its default state with green lights and ready to accept passage events.
     - **Special Requirements:** Compliance with IEC 61131-3 and real-time monitoring of sensors and outputs.
   - **Priority:** High
   - **Data Requirements:** Sensor and actuator status registers.
   - **Business Rules:** The system must never allow conflicting light states during initialization.

2. **Use Case Name: Process Vehicle Passage 鈥� Ground Floor Access**
   - **Actor:** Vehicle (Driver) / Sensor Subsystem
   - **Use Case:** [UC-GF]: Manage vehicle passage when detected at the ground floor entrance.
   - **System Boundary:** IEC 61131-3 Structured Text Program for the Parking Passage Control System
   - **Relationships Among Actors:** The vehicle activates sensor X1; the PLC reads the pulse (M1) generated by the vehicle passing the ground floor sensor.
   - **Detailed Descriptive Information:**
     - **Brief Description:** When a vehicle is detected entering from the ground floor, set the traffic lights to red, block any further vehicle action, and then restore the green lights once the vehicle has fully cleared the passage.
     - **Preconditions:** System is initialized (green lights active); sensor X1 is operational.
     - **Event Flow (Basic Flow):** 
       1. Event: A vehicle passes sensor X1.
       2. Sensor X1 triggers a pulse; M1 is set (active for one scan cycle).
       3. The PLC sets intermediate flag M20 to indicate vehicle occupancy from the ground floor.
       4. The PLC turns off green lights (Y2) and activates red lights (Y1) at both ground floor and basement entrances to block further movement.
       5. The system monitors the passage until the sensor indicates the vehicle has completely passed.
       6. Once passage is clear, the PLC resets M20 and restores green lights at both ends.
     - **Alternative Flow:** If sensor X1 signal is intermittent or if conflicting signals are detected, the PLC enters an error-handling routine, maintaining red lights and logging the error.
     - **Postconditions:** Vehicle successfully passes; traffic lights are reset to green, allowing subsequent operations.
     - **Special Requirements:** Response time of sensor detection and light control should meet real-time system constraints; no overlapping activations are allowed.
   - **Priority:** High
   - **Data Requirements:** Real-time sensor data from X1 and pulse M1; intermediate flag M20.
   - **Business Rules:** Once the passage is activated for a vehicle, no further entry or exit is permitted until the vehicle is cleared.

3. **Use Case Name: Process Vehicle Passage 鈥� Basement Access**
   - **Actor:** Vehicle (Driver) / Sensor Subsystem
   - **Use Case:** [UC-BS]: Manage vehicle passage when detected at the basement entrance.
   - **System Boundary:** IEC 61131-3 Structured Text Program for the Parking Passage Control System
   - **Relationships Among Actors:** The vehicle activates sensor X2; the PLC reads the pulse (M3 or M4) generated by the vehicle passing the basement sensor.
   - **Detailed Descriptive Information:**
     - **Brief Description:** When a vehicle is detected entering from the basement, set the traffic lights to red, block any other vehicle movement until the vehicle completes its passage, and then reset to green afterwards.
     - **Preconditions:** System is initialized and green lights are active; sensor X2 is operational.
     - **Event Flow (Basic Flow):** 
       1. Event: A vehicle passes sensor X2.
       2. Sensor X2 triggers a pulse; either M3 (typical for basement entry) or, based on system logic, M4 (if coming from the opposite side) is set.
       3. The PLC sets intermediate flag M30 to indicate that the vehicle is occupying the passage from the basement.
       4. The system sets red lights (Y1 on) for both basement and ground floor, thereby prohibiting any conflicting entry/exit.
       5. The system monitors the vehicle until the sensor data confirms that the vehicle has completely left the passage.
       6. The PLC clears M30 and reactivates green lights (Y2) at both entrances.
     - **Alternative Flow:** If simultaneous signals are detected (for example, if X1 and X2 are triggered concurrently), the PLC identifies the conflict as an error condition, invoking an error routine and maintaining red lights until the conflict is resolved.
     - **Postconditions:** Vehicle successfully passes through the basement entry; traffic lights are restored to green allowing for normal operation.
     - **Special Requirements:** The system must consider the possible overlap if a vehicle is incorrectly detected simultaneously by ground floor sensors; proper filtering logic is required.
   - **Priority:** High
   - **Data Requirements:** Real-time sensor data from X2 and pulse signals (M3 and/or M4); intermediate flag M30.
   - **Business Rules:** The system must enforce mutual exclusion: if the passage is occupied due to a basement entry, no other sensor event should trigger until clearance.

Additional Remarks on the Design:
- Event Flow versus Alternative Flow: In the 鈥淓vent Flow鈥� sections, each numbered step corresponds to the normal, expected sequence (the basic flow). The 鈥淎lternative Flow鈥� sections list variations due to sensor anomalies or concurrent events, which have been assigned a medium priority relative to the basic high-priority flows.
- Prioritization is used to ensure that the core processes (system initialization, safe vehicle passage from either side) are implemented first while error-handling routines may follow as an enhancement.
- The design also enforces that, once a vehicle is engaged with the passage, no other vehicle can start its process until the lane is clear, thereby simplifying error management and avoiding conflicting light states.

1. **Red Lights Activation from Ground Floor Entry:**
   - **CTL Specification:**
     - `AG((X1_active & M20_active) -> AX(Y1_on & !Y2_on));`
   - **Description:** Ensures that when sensor X1 is active and the intermediate flag M20 indicates a vehicle is entering from the ground floor, Y1 (red lights) are turned on and Y2 (green lights) are turned off at both the basement and ground floor.

2. **Green Lights Restoration from Basement Entry:**
   - **CTL Specification:**
     - `AG((X2_active & !M20_active) -> AX(!Y1_on & Y2_on));`
   - **Description:** Ensures that when sensor X2 is active and M20 is not set (indicating a vehicle is entering the basement from the ground floor), Y1 (red lights) are turned off and Y2 (green lights) are turned on at both the basement and ground floor.

3. **Red Lights Activation from Basement Entry:**
   - **CTL Specification:**
     - `AG((X2_active & M30_active) -> AX(Y1_on & !Y2_on));`
   - **Description:** Ensures that when sensor X2 is active and the intermediate flag M30 indicates a vehicle is entering from the basement, Y1 (red lights) are turned on and Y2 (green lights) are turned off at both the basement and ground floor.

4. **Green Lights Restoration on Exit:**
   - **CTL Specification:**
     - `AG((Vehicle_Exit & !M20_active & !M30_active) -> AX(!Y1_on & Y2_on));`
   - **Description:** Ensures that when a vehicle exits the parking lot and neither M20 nor M30 are active, Y1 (red lights) are turned off and Y2 (green lights) are turned on at both the basement and ground floor.

These specifications use Y1 and Y2 to clearly define the states of the red and green lights, ensuring the system's behavior aligns with the intended traffic control logic.
