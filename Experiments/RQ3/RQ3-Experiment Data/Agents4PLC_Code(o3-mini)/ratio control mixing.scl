PROGRAM MixingControl
(*
  Description:
    This program controls the mixing of two reactants to achieve a 100:1 ratio.
    Reactant A (controlled) is mixed with a fixed-flow Reactant B.
    The mixing ratio is calculated as FlowA divided by FlowB using integer arithmetic.
    If the ratio is greater than 102, the feed rate of Reactant A is reduced.
    If the ratio is less than 98, the feed rate of Reactant A is increased.
    If the ratio is within the acceptable range (between 98 and 102), the current feed rate is maintained.
    
  Note:
    All variables have been changed from REAL to INT for ease of formal verification.
*)

VAR
    // Process variables
    FlowA       : INT;      (* Measured flow rate for Reactant A (controlled) *)
    FlowB       : INT;      (* Measured flow rate for Reactant B (fixed) *)
    Ratio       : INT;      (* Calculated mixing ratio (FlowA / FlowB) *)
    
    // Control variables
    currentRate : INT := 0; (* Current setpoint for Reactant A's input rate *)
    Adjustment  : INT;      (* Increment or decrement to adjust currentRate *)
    StepSize    : INT := 1;   (* Step change for each adjustment cycle *)
END_VAR

(* Calculate the mixing ratio, with division-by-zero protection *)
IF FlowB <> 0 THEN
    Ratio := FlowA / FlowB;
ELSE
    Ratio := 0;  (* If FlowB is zero, safely set Ratio *)
END_IF;

(* Control logic: adjust the feed rate based on the calculated mixing ratio *)
IF Ratio > 102 THEN
    (* When too much Reactant A is present, reduce its input rate *)
    Adjustment := -StepSize;
ELSIF Ratio < 98 THEN
    (* When not enough Reactant A is present, increase its input rate *)
    Adjustment := StepSize;
ELSE
    (* Ratio is acceptable; maintain the current input rate *)
    Adjustment := 0;
END_IF;

(* Update the controlled rate for Reactant A *)
currentRate := currentRate + Adjustment;

(* Safety: Ensure the currentRate does not drop below zero *)
IF currentRate < 0 THEN
    currentRate := 0;
END_IF;

(* currentRate serves as the output control signal for downstream modules *)

END_PROGRAM