PROGRAM ConveyorBeltSpeedAdjustment
VAR_INPUT
    SensorLoad    : INT;  (* Sensor load measurement *)
    ThresholdHigh : INT;  (* Upper threshold: if exceeded, speed is reduced *)
    ThresholdLow  : INT;  (* Lower threshold: if below, speed is increased *)
END_VAR

VAR_OUTPUT
    ConveyorSpeed : INT;  (* Adjusted conveyor belt speed *)
END_VAR

VAR
    currentSpeed  : INT;    (* Internal variable for current speed *)
    isInitialized : BOOL;   (* Initialization flag *)
END_VAR

CONST
    SPEED_STEP : INT := 1;   (* Increment/decrement step *)
    MIN_SPEED  : INT := 0;   (* Minimum allowed speed *)
    MAX_SPEED  : INT := 10;  (* Maximum allowed speed *)
END_CONST

(* Initialization performed only on the first cycle *)
IF NOT isInitialized THEN
    IF (ThresholdHigh > 0) AND (ThresholdLow >= 0) THEN
        currentSpeed := (MIN_SPEED + MAX_SPEED) / 2;
    ELSE
        (* Default safe speed if thresholds are invalid *)
        currentSpeed := MIN_SPEED;
    END_IF;
    isInitialized := TRUE;
ELSE
    (* Perform adjustment only when thresholds are valid *)
    IF (ThresholdHigh > 0) AND (ThresholdLow >= 0) THEN
        IF SensorLoad < ThresholdLow THEN
            (* Light load detected: increase speed *)
            currentSpeed := currentSpeed + SPEED_STEP;
            IF currentSpeed > MAX_SPEED THEN
                currentSpeed := MAX_SPEED;
            END_IF;
        ELSIF SensorLoad > ThresholdHigh THEN
            (* Heavy load detected: reduce speed *)
            currentSpeed := currentSpeed - SPEED_STEP;
            IF currentSpeed < MIN_SPEED THEN
                currentSpeed := MIN_SPEED;
            END_IF;
        ELSE
            (* Load within acceptable range: explicitly maintain current speed *)
            currentSpeed := currentSpeed; 
        END_IF;
    END_IF;
END_IF;

ConveyorSpeed := currentSpeed;
END_PROGRAM